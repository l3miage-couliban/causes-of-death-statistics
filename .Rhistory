geom_line(aes(y = total_deaths, colour = "Deaths"), sec.axis = sec_axis(~./1000, name = "Deaths")) +
scale_y_continuous(name = "Population") +
scale_color_manual(values = c("Population" = "blue", "Deaths" = "red")) +
theme_minimal() +
labs(title = "Population vs. Deaths in Asia", x = "Year", y = "Population", colour = "Metric")
library(ggplot2)
library(dplyr)
# Corrected data filtering and summarizing
asian_data <- data %>%
filter(region == "Asia") %>%
group_by(Year) %>%
filter(!is.na(`Death Numbers`)) %>%
summarise(total_deaths = sum(`Death Numbers`, na.rm = TRUE),
total_population = sum(population, na.rm = TRUE))
# Adjusted plotting code to match variable names
asian_data <- asian_data %>%
mutate(death_rate_per_1000 = (total_deaths / total_population) * 1000)
ggplot(asian_data, aes(x = Year)) +
geom_line(aes(y = death_rate_per_1000, colour = "Death Rate")) +
theme_minimal() +
labs(title = "Death Rate per 1,000 People in Asia", x = "Year", y = "Death Rate (per 1,000)")
library(ggplot2)
library(dplyr)
# Corrected data filtering and summarizing
asian_data <- data %>%
filter(region == "Asia") %>%
group_by(Year) %>%
filter(!is.na(`Death Numbers`)) %>%
summarise(total_deaths = sum(`Death Numbers`, na.rm = TRUE),
total_population = sum(population, na.rm = TRUE))
# Adjusted plotting code to match variable names
ggplot(asian_data, aes(x = Year)) +
geom_line(aes(y = total_population, colour = "Population")) +
geom_line(aes(y = total_deaths, colour = "Deaths")) +
scale_y_log10() +
theme_minimal() +
labs(title = "Population vs. Deaths in Asia (Log Scale)", x = "Year", y = "Count (Log Scale)", colour = "Metric")
library(ggplot2)
library(dplyr)
# Corrected data filtering and summarizing
asian_data <- data %>%
filter(region == "Asia") %>%
group_by(Year) %>%
filter(!is.na(`Death Numbers`)) %>%
summarise(total_deaths = sum(`Death Numbers`, na.rm = TRUE),
total_population = sum(population, na.rm = TRUE))
# Adjusted plotting code to match variable names
ggplot(asian_data, aes(x = Year)) +
geom_line(aes(y = total_population, colour = "Population")) +
geom_line(aes(y = total_deaths, colour = "Deaths")) +
scale_y_continuous(
name = "Population",
sec.axis = sec_axis(~./1000, name="Deaths (thousands)")
) +
theme_minimal() +
labs(title = "Evolution of Population and Deaths in Asia",
x = "Year",
y = "Population",
colour = "Legend")
View(asian_data)
View(asian_data)
library(ggplot2)
library(dplyr)
# Corrected data filtering and summarizing
asian_data <- data %>%
filter(region == "Asia") %>%
group_by(Year) %>%
filter(!is.na(`Death Numbers`)) %>%
summarise(total_deaths = sum(`Death Numbers`, na.rm = TRUE),
total_population = sum(population, na.rm = TRUE))
# Adjusted plotting code to match variable names
ggplot(asian_data, aes(x = Year)) +
geom_line(aes(y = total_population, colour = "Population")) +
geom_line(aes(y = total_deaths, colour = "Deaths")) +
scale_y_continuous(
name = "Population",
) +
theme_minimal() +
labs(title = "Evolution of Population and Deaths in Asia",
x = "Year",
y = "Population",
colour = "Legend")
library(ggplot2)
library(dplyr)
# Corrected data filtering and summarizing
asian_data <- data %>%
filter(region == "Asia") %>%
group_by(Year) %>%
filter(!is.na(`Death Numbers`)
# Adjusted plotting code to match variable names
ggplot(asian_data, aes(x = Year)) +
library(ggplot2)
library(dplyr)
# Corrected data filtering and summarizing
asian_data <- data %>%
filter(region == "Asia") %>%
group_by(Year) %>%
filter(!is.na(`Death Numbers`))
# Adjusted plotting code to match variable names
ggplot(asian_data, aes(x = Year)) +
geom_line(aes(y = total_population, colour = "Population")) +
geom_line(aes(y = total_deaths, colour = "Deaths")) +
scale_y_continuous(
name = "Population",
) +
theme_minimal() +
labs(title = "Evolution of Population and Deaths in Asia",
x = "Year",
y = "Population",
colour = "Legend")
library(ggplot2)
library(dplyr)
# Corrected data filtering and summarizing
asian_data <- data %>%
filter(region == "Asia") %>%
group_by(Year) %>%
filter(!is.na(`Death Numbers`))
# Adjusted plotting code to match variable names
ggplot(asian_data, aes(x = Year)) +
geom_line(aes(y = total_deaths, colour = "Deaths")) +
scale_y_continuous(
name = "Population",
) +
theme_minimal() +
labs(title = "Evolution of Population and Deaths in Asia",
x = "Year",
y = "Population",
colour = "Legend")
library(ggplot2)
library(dplyr)
# Corrected data filtering and summarizing
asian_data <- data %>%
filter(region == "Asia") %>%
group_by(Year) %>%
filter(!is.na(`Death Numbers`))
# Adjusted plotting code to match variable names
ggplot(data = data, aes(x = Year)) +
geom_line(aes(, colour = "Deaths")) +
scale_y_continuous(
name = "Population",
) +
theme_minimal() +
labs(title = "Evolution of Population and Deaths in Asia",
x = "Year",
y = "Population",
colour = "Legend")
View(asian_data)
View(asian_data)
library(ggplot2)
library(dplyr)
# Corrected data filtering and summarizing
asian_data <- data %>%
filter(region == "Asia") %>%
group_by(Year) %>%
filter(!is.na(`Death Numbers`))
# Adjusted plotting code to match variable names
ggplot(data = data, aes(x = Year)) +
geom_line(aes('Death Number', colour = "Deaths")) +
scale_y_continuous(
name = "Population",
) +
theme_minimal() +
labs(title = "Evolution of Population and Deaths in Asia",
x = "Year",
y = "Population",
colour = "Legend")
library(ggplot2)
library(dplyr)
# Corrected data filtering and summarizing
asian_data <- data %>%
filter(region == "Asia") %>%
group_by(Year) %>%
filter(!is.na(`Death Numbers`))
# Adjusted plotting code to match variable names
ggplot(data = data, aes(x = Year)) +
geom_line(aes('Death Number', colour = "Deaths"))
library(ggplot2)
library(dplyr)
# Corrected data filtering and summarizing
asian_data <- data %>%
filter(region == "Asia") %>%
group_by(Year) %>%
filter(!is.na(`Death Numbers`))
# Adjusted plotting code to match variable names
ggplot(data = data, aes(x = Year)) +
geom_line()
library(ggplot2)
library(dplyr)
asian_data <- data %>%
filter(region == "Asia") %>%
group_by(Year) %>%
summarise(
total_deaths = sum(`Death Numbers`, na.rm = TRUE), # Sum of deaths, removing NAs
total_population = sum(population, na.rm = TRUE) # Sum of population, removing NAs
)
# Now, plot the total_population over time
ggplot(data = asian_data, aes(x = Year, y = total_population)) +
geom_line() +
theme_minimal() +
labs(title = "Population Evolution in Asia", x = "Year", y = "Total Population")
library(ggplot2)
library(dplyr)
asian_data <- data %>%
filter(region == "Asia") %>%
group_by(Year) %>%
summarise(
total_deaths = sum(`Death Numbers`, na.rm = TRUE), # Sum of deaths, removing NAs
total_population = sum(population, na.rm = TRUE) # Sum of population, removing NAs
)
# Now, plot the total_population over time
ggplot(data = asian_data, aes(x = Year, y = total_population)) +
geom_line() +
theme_minimal() +
labs(title = "Population Evolution in Asia", x = "Year", y = "Total Population")
ggplot(data = asian_data, aes(x = Year, y = total_deaths)) +
geom_line() +
theme_minimal() +
labs(title = "Deaths Evolution in Asia", x = "Year", y = "Total Population")
ggplot(data = data) +
aes(x = Year) +
aes(y = population) +
geom_line() +
facet_wrap(~ region) +
labs(y = "") +
labs(title = "Number of Winter Olympic Medals among 16 most winning countries, 1948-2014") +
labs(caption = "Vis: @EvaMaeRey | Source: Sports-Reference.com") +
theme_minimal()
ggplot(data = data) +
aes(x = Year) +
aes(y = population) +
geom_line() +
facet_wrap(~ region) +
labs(y = "") +
theme_minimal()
ggplot(data = data, aes(x = Year, y = population)) +
geom_line() +
facet_wrap(~ region, scales = "free_y") +  # `scales = "free_y"` allows each facet to have its own y-axis scale
labs(
title = "Population Trends by Region",
x = "Year",
y = "Population"
) +
theme_minimal()
filtered_data <- data %>%
filter(!is.na(region) & !is.na(Year) & !is.na(population))
# Now plot using this filtered dataset
ggplot(data = filtered_data, aes(x = Year, y = population)) +
geom_line() +
facet_wrap(~ region, scales = "free_y") +
labs(
title = "Population Trends by Region",
x = "Year",
y = "Population"
) +
theme_minimal()
asian_data <- data %>%
filter(region == "Asia") %>%
group_by(Year) %>%
summarise(
total_deaths = sum(`Death Numbers`, na.rm = TRUE), # Sum of deaths, removing NAs
total_population = sum(population, na.rm = TRUE) # Sum of population, removing NAs
)
# Now, plot the total_population over time
ggplot(data = asian_data, aes(x = Year, y = total_population)) +
geom_line() +
theme_minimal() +
labs(title = "Population Evolution in Asia", x = "Year", y = "Total Population")
ggplot(data = asian_data, aes(x = Year, y = total_deaths)) +
geom_line() +
theme_minimal() +
labs(title = "Deaths Evolution in Asia", x = "Year", y = "Total Population")
filtered_data <- data %>%
filter(!is.na(region) & !is.na(Year) & !is.na(population))
ggplot(data = filtered_data, aes(x = Year, y = 'Death Numbers')) +
geom_line() +
facet_wrap(~ region, scales = "free_y") +
labs(
title = "Population Trends by Region",
x = "Year",
y = "Population"
) +
theme_minimal()
filtered_data <- data %>%
filter(!is.na(region) & !is.na(Year) & !is.na(population))
ggplot(data = filtered_data, aes(x = Year, y = `Death Numbers`)) +
geom_line() +
facet_wrap(~ region, scales = "free_y") +
labs(
title = "Population Trends by Region",
x = "Year",
y = "Population"
) +
theme_minimal()
filtered_data <- data %>%
filter(!is.na(region) & !is.na(Year) & !is.na(population))
ggplot(data = filtered_data, aes(x = Year, y = `Death Numbers`)) +
geom_line() +
facet_wrap(~ region, scales = "free_y") +
labs(
title = "Population Trends by Region",
x = "Year",
y = "Population"
) +
theme_minimal()
ggplot(data = asian_data, aes(x = Year)) +
geom_line(aes(y = total_population, colour = "Total Population")) +
geom_line(aes(y = total_deaths, colour = "Total Deaths")) +
scale_y_continuous(
name = "Total Population",
sec.axis = sec_axis(~ ., name="Total Deaths") # You might need to adjust the transformation for the secondary axis
) +
theme_minimal() +
scale_colour_manual(values = c("Total Population" = "blue", "Total Deaths" = "red")) +
labs(title = "Population and Deaths Evolution in Asia", x = "Year")
asian_data <- data %>%
filter(region == "Asia") %>%
group_by(Year) %>%
summarise(
total_deaths = sum(`Death Numbers`, na.rm = TRUE), # Sum of deaths, removing NAs
total_population = sum(population, na.rm = TRUE) # Sum of population, removing NAs
)
# Now, plot the total_population over time
ggplot(data = asian_data, aes(x = Year, y = total_population)) +
geom_line() +
theme_minimal() +
labs(title = "Population Evolution in Asia", x = "Year", y = "Total Population")
ggplot(data = asian_data, aes(x = Year, y = total_deaths)) +
geom_line() +
theme_minimal() +
labs(title = "Deaths Evolution in Asia", x = "Year", y = "Total Population")
ggplot(data = asian_data, aes(x = Year)) +
geom_line(aes(y = total_population, colour = "Total Population")) +
geom_line(aes(y = total_deaths, colour = "Total Deaths")) +
scale_y_continuous(
name = "Total Population",
sec.axis = sec_axis(~ ., name="Total Deaths") # You might need to adjust the transformation for the secondary axis
) +
theme_minimal() +
scale_colour_manual(values = c("Total Population" = "blue", "Total Deaths" = "red")) +
labs(title = "Population and Deaths Evolution in Asia", x = "Year")
asian_data <- data %>%
filter(region == "Asia") %>%
group_by(Year) %>%
summarise(
total_deaths = sum(`Death Numbers`, na.rm = TRUE), # Sum of deaths, removing NAs
total_population = sum(population, na.rm = TRUE) # Sum of population, removing NAs
)
# Now, plot the total_population over time
ggplot(data = asian_data, aes(x = Year, y = total_population)) +
geom_line() +
theme_minimal() +
labs(title = "Population Evolution in Asia", x = "Year", y = "Total Population")
ggplot(data = asian_data, aes(x = Year, y = total_deaths)) +
geom_line() +
theme_minimal() +
labs(title = "Deaths Evolution in Asia", x = "Year", y = "Total Population")
ggplot(data = asian_data, aes(x = Year)) +
geom_line(aes(y = total_population, colour = "Total Population")) +
geom_line(aes(y = total_deaths, colour = "Total Deaths")) +
scale_y_continuous(
name = "Total Population",
sec.axis = sec_axis(~ ., name="Total Deaths") # You might need to adjust the transformation for the secondary axis
) +
theme_minimal() +
scale_colour_manual(values = c("Total Population" = "blue", "Total Deaths" = "red")) +
labs(title = "Population and Deaths Evolution in Asia", x = "Year")
ggplot(data = asian_data, aes(x = Year)) +
geom_line(aes(y = total_population, colour = "Total Population")) +
geom_line(aes(y = total_deaths, colour = "Total Deaths")) +
scale_y_continuous(
name = "Total Population",
sec.axis = sec_axis(~., name="Total Deaths"),
limits = c(0, max(asian_data$total_population) * 1.1) # Élargit l'axe Y pour mieux voir les données
) +
theme_minimal() +
scale_colour_manual(values = c("Total Population" = "blue", "Total Deaths" = "red")) +
labs(title = "Population and Deaths Evolution in Asia", x = "Year")
asian_data <- data %>%
filter(region == "Asia") %>%
group_by(Year) %>%
summarise(
total_deaths = sum(`Death Numbers`, na.rm = TRUE), # Sum of deaths, removing NAs
total_population = sum(population, na.rm = TRUE) # Sum of population, removing NAs
)
# Now, plot the total_population over time
ggplot(data = asian_data, aes(x = Year, y = total_population)) +
geom_line() +
theme_minimal() +
labs(title = "Population Evolution in Asia", x = "Year", y = "Total Population")
ggplot(data = asian_data, aes(x = Year, y = total_deaths)) +
geom_line() +
theme_minimal() +
labs(title = "Deaths Evolution in Asia", x = "Year", y = "Total Population")
ggplot(data = asian_data, aes(x = Year)) +
geom_line(aes(y = total_population, colour = "Total Population")) +
geom_line(aes(y = total_deaths, colour = "Total Deaths")) +
scale_y_continuous(
name = "Total Population",
sec.axis = sec_axis(~ ., name="Total Deaths") # You might need to adjust the transformation for the secondary axis
) +
theme_minimal() +
scale_colour_manual(values = c("Total Population" = "blue", "Total Deaths" = "red")) +
labs(title = "Population and Deaths Evolution in Asia", x = "Year")
filtered_data <- data %>%
filter(!is.na(region) & !is.na(Year) & !is.na(population))
ggplot(data = filtered_data, aes(x = Year, y = `Death Numbers`)) +
geom_line() +
facet_wrap(~ region, scales = "free_y") +
labs(
title = "Population Trends by Region",
x = "Year",
y = "Population"
) +
theme_minimal()
View(filtered_data)
asian_data <- data %>%
filter(region == "Asia") %>%
group_by(Year) %>%
summarise(
total_deaths = sum(`Death Numbers`, na.rm = TRUE), # Sum of deaths, removing NAs
total_population = sum(population, na.rm = TRUE) # Sum of population, removing NAs
)
# Now, plot the total_population over time
ggplot(data = asian_data, aes(x = Year, y = total_population)) +
geom_line() +
theme_minimal() +
labs(title = "Population Evolution in Asia", x = "Year", y = "Total Population")
asian_data <- data %>%
filter(region == "Americas") %>%
group_by(Year) %>%
summarise(
total_deaths = sum(`Death Numbers`, na.rm = TRUE), # Sum of deaths, removing NAs
total_population = sum(population, na.rm = TRUE) # Sum of population, removing NAs
)
# Now, plot the total_population over time
ggplot(data = asian_data, aes(x = Year, y = total_population)) +
geom_line() +
theme_minimal() +
labs(title = "Population Evolution in Asia", x = "Year", y = "Total Population")
americas_data <- data %>%
filter(region == "Americas") %>%
group_by(Year) %>%
summarise(
total_deaths = sum(`Death Numbers`, na.rm = TRUE), # Sum of deaths, removing NAs
total_population = sum(population, na.rm = TRUE) # Sum of population, removing NAs
)
# Now, plot the total_population over time
ggplot(data = americas_data, aes(x = Year, y = total_population)) +
geom_line() +
theme_minimal() +
labs(title = "Population Evolution in Asia", x = "Year", y = "Total Population")
Europe_data <- data %>%
filter(region == "Europe") %>%
group_by(Year) %>%
summarise(
total_deaths = sum(`Death Numbers`, na.rm = TRUE), # Sum of deaths, removing NAs
total_population = sum(population, na.rm = TRUE) # Sum of population, removing NAs
)
# Now, plot the total_population over time
ggplot(data = Europe_data, aes(x = Year, y = total_population)) +
geom_line() +
theme_minimal() +
labs(title = "Population Evolution in Asia", x = "Year", y = "Total Population")
americas_data <- data %>%
filter(region == "Americas") %>%
group_by(Year) %>%
summarise(
total_deaths = sum(`Death Numbers`, na.rm = TRUE), # Sum of deaths, removing NAs
total_population = sum(population, na.rm = TRUE) # Sum of population, removing NAs
)
# Now, plot the total_population over time
ggplot(data = americas_data, aes(x = Year, y = total_population)) +
geom_line() +
theme_minimal() +
labs(title = "Population Evolution in Americas", x = "Year", y = "Total Population")
Europe_data <- data %>%
filter(region == "Europe") %>%
group_by(Year) %>%
summarise(
total_deaths = sum(`Death Numbers`, na.rm = TRUE), # Sum of deaths, removing NAs
total_population = sum(population, na.rm = TRUE) # Sum of population, removing NAs
)
# Now, plot the total_population over time
ggplot(data = Europe_data, aes(x = Year, y = total_population)) +
geom_line() +
theme_minimal() +
labs(title = "Population Evolution in Europe", x = "Year", y = "Total Population")
Africa_data <- data %>%
filter(region == "Africa") %>%
group_by(Year) %>%
summarise(
total_deaths = sum(`Death Numbers`, na.rm = TRUE), # Sum of deaths, removing NAs
total_population = sum(population, na.rm = TRUE) # Sum of population, removing NAs
)
# Now, plot the total_population over time
ggplot(data = Africa_data, aes(x = Year, y = total_population)) +
geom_line() +
theme_minimal() +
labs(title = "Population Evolution in Africa", x = "Year", y = "Total Population")
Oceania_data <- data %>%
filter(region == "Oceania") %>%
group_by(Year) %>%
summarise(
total_deaths = sum(`Death Numbers`, na.rm = TRUE), # Sum of deaths, removing NAs
total_population = sum(population, na.rm = TRUE) # Sum of population, removing NAs
)
# Now, plot the total_population over time
ggplot(data = Oceania_data, aes(x = Year, y = total_population)) +
geom_line() +
theme_minimal() +
labs(title = "Population Evolution in Oceania", x = "Year", y = "Total Population")
View(Europe_data)
